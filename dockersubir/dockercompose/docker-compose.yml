version: "3.2" #Version de Docker compose que estamos utilizando
services: #Servicios, es decir, los contenedores que vamos a crear
  mispringboot: #Nombre del contenedor
    container_name: mispring
    build: . #Indicamos que este contenedor se va a construrir a traves del Dockerfile
    ports: #Vamos a indicar una lista de los puertos que vamos a mapear para el contenedor
      - "8080:8080" #PuertoDelHost:PuertoDelContenedor
    links: #Lista con los contenedores a los que el contenedor se va a conectar
      - server #Este es el nombre del contenedor
    networks:
      personalizada:
          ipv4_address: 172.16.0.3
  server: #Nombre del contenedor
      container_name: postgrestest
      image: postgres #Imagen desde la cual vamos a construir el contenedor
      ports: #Lista de puertos que vamos a mapear del contenedor
        - "5432:5432"#PuertoDelHost:PuertoDelContenedor
      networks:
        personalizada:
          ipv4_address: 172.16.0.2
      environment: #Variables de entorno que hay que configurar en la maquina
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: contrasena
        POSTGRES_DB: test
  dbeaver: #Nombre del contenedor
    container_name: dbeaver
    image: dbeaver/cloudbeaver
    ports: #Vamos a indicar una lista de los puertos que vamos a mapear para el contenedor
      - "8978:8978" #PuertoDelHost:PuertoDelContenedor
    links: #Lista con los contenedores a los que el contenedor se va a conectar
      - server
    depends_on:
      - server
    networks:
      personalizada:
        ipv4_address: 172.16.0.4
networks:
  personalizada:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/16
          gateway: 172.16.0.1

